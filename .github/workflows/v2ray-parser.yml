name: Proxy Subscription Analyzer

on:
  workflow_dispatch:
    inputs:
      subscribe_url:
        description: '输入订阅链接 (明文)'
        required: true

jobs:
  analyze-proxies:
    runs-on: ubuntu-latest
    steps:
    - name: 安装依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y jq coreutils curl bc

    - name: 获取订阅内容
      env:
        SUB_URL: ${{ github.event.inputs.subscribe_url }}
      run: |
        curl -sL "$SUB_URL" | base64 -d > nodes.txt

    - name: 解析并测试节点
      run: |
        function measure_latency() {
          local host=$1
          local port=$2
          local start end
          
          start=$(date +%s%3N)
          timeout 5 bash -c ">/dev/tcp/$host/$port" 2>/dev/null
          if [ $? -eq 0 ]; then
            end=$(date +%s%3N)
            echo "scale=2; ($end - $start)/1000" | bc
          else
            echo "超时"
          fi
        }

        while read -r line; do
          case $line in
            vmess://*)
              payload=$(echo "$line" | awk -F'vmess://' '{print $2}' | cut -d'#' -f1 | sed 's/\=*$//')
              json=$(echo "$payload" | base64 -d 2>/dev/null)
              name=$(echo "$json" | jq -r '.ps // empty')
              server=$(echo "$json" | jq -r '.add')
              port=$(echo "$json" | jq -r '.port')
              ;;
            
            vless://*|trojan://*)
              server_info=$(echo "$line" | awk -F'[@#]' '{print $2}')
              server=$(echo "$server_info" | cut -d':' -f1)
              port=$(echo "$server_info" | cut -d':' -f2 | cut -d'/' -f1)
              name=$(echo "$line" | awk -F'#' '{print $2}')
              ;;
            
            ss://*)
              decoded=$(echo "$line" | sed 's/ss:\/\///;s/#.*//' | base64 -d 2>/dev/null)
              method=$(echo "$decoded" | cut -d':' -f1)
              password=$(echo "$decoded" | cut -d':' -f2 | cut -d'@' -f1)
              server=$(echo "$decoded" | cut -d'@' -f2 | cut -d':' -f1)
              port=$(echo "$decoded" | cut -d'@' -f2 | cut -d':' -f2)
              name=$(echo "$line" | awk -F'#' '{print $2}')
              ;;
          esac

          [[ -z "$name" ]] && name="未命名节点_$(echo "$line" | md5sum | cut -c1-6)"
          [[ -z "$server" ]] && server="无效地址"
          [[ -z "$port" ]] && port="0"

          latency=$(measure_latency "$server" "$port")
          echo "${name} | 延迟: ${latency}s"
        done < <(grep -E 'vmess://|vless://|trojan://|ss://' nodes.txt)